[{"/Users/sohamdutta/Desktop/code/myPortfolio/src/index.js":"1","/Users/sohamdutta/Desktop/code/myPortfolio/src/reportWebVitals.js":"2","/Users/sohamdutta/Desktop/code/myPortfolio/src/App.js":"3","/Users/sohamdutta/Desktop/code/myPortfolio/src/components/Navbar.js":"4","/Users/sohamdutta/Desktop/code/myPortfolio/src/components/About.js":"5","/Users/sohamdutta/Desktop/code/myPortfolio/src/components/LandingPage.js":"6","/Users/sohamdutta/Desktop/code/myPortfolio/src/components/ContactForm.js":"7","/Users/sohamdutta/Desktop/code/myPortfolio/src/components/Work.js":"8","/Users/sohamdutta/Desktop/code/myPortfolio/src/components/Skills.js":"9","/Users/sohamdutta/Desktop/code/myPortfolio/src/components/Project.js":"10"},{"size":478,"mtime":1611793185694,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611793185694,"results":"13","hashOfConfig":"12"},{"size":202,"mtime":1611859124716,"results":"14","hashOfConfig":"12"},{"size":3883,"mtime":1614722871151,"results":"15","hashOfConfig":"12"},{"size":2482,"mtime":1614283990219,"results":"16","hashOfConfig":"12"},{"size":2336,"mtime":1615587072401,"results":"17","hashOfConfig":"12"},{"size":5293,"mtime":1615573810817,"results":"18","hashOfConfig":"12"},{"size":5971,"mtime":1615585172569,"results":"19","hashOfConfig":"12"},{"size":4302,"mtime":1615586963328,"results":"20","hashOfConfig":"12"},{"size":1570,"mtime":1615585127565,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1328r6x",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"/Users/sohamdutta/Desktop/code/myPortfolio/src/index.js",[],["45","46"],"/Users/sohamdutta/Desktop/code/myPortfolio/src/reportWebVitals.js",[],"/Users/sohamdutta/Desktop/code/myPortfolio/src/App.js",[],"/Users/sohamdutta/Desktop/code/myPortfolio/src/components/Navbar.js",[],"/Users/sohamdutta/Desktop/code/myPortfolio/src/components/About.js",[],"/Users/sohamdutta/Desktop/code/myPortfolio/src/components/LandingPage.js",[],"/Users/sohamdutta/Desktop/code/myPortfolio/src/components/ContactForm.js",["47","48"],"import React, { useState } from 'react'\nimport Fade from 'react-reveal/Fade';\nimport MovingComponent from 'react-moving-text'\nimport './Styles.css'\nimport emailjs from 'emailjs-com';\nimport Bounce from 'react-reveal/Bounce';\nimport GoogleMaps from \"simple-react-google-maps\"\n\nexport default function ContactForm() {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [subject, setSubject] = useState('')\n  const [message, setMessage] = useState('')\n  const [complete, setComplete] = useState(false)\n\n  const resetForm = () => {\n    setName('')\n    setEmail('')\n    setSubject('')\n    setMessage('')\n    setComplete(true)\n  }\n\n  const emailValidation = (email) => {\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (re.test(email)) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  const contentValidation = () => {\n    if (name.length > 0 && subject.length > 0 && message.length > 0) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const click = (e) => {\n    e.preventDefault()\n    let templateParams = {\n      name: name,\n      email: email,\n      subject: subject,\n      message: message\n    }\n    emailjs.send('service_soham', 'template_soham', templateParams, 'user_HC18YiCW28WYlD9ry87FB')\n    resetForm()\n    setTimeout(() => { setComplete(false) }, 4000)\n  }\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <div className=\"ui container\">\n        <Fade left>\n          <div>\n            <div className='tags'>\n              <p>&lt; div &gt;</p>\n              <br />\n              <p>&lt; h1 &gt;</p>\n              <br />\n            </div>\n\n            <div className='typeText'>\n              <br />\n              <MovingComponent type=\"typewriter\"\n                dataText={[\n                  'Contact Me'\n                ]} />\n              <br />\n            </div>\n\n            <div className='tags'>\n              <br />\n              <p>&lt; /h1 &gt;</p>\n              <br />\n            </div>\n\n            <div className='tags'>\n              <p>&lt; input &gt;</p>\n              <br />\n            </div>\n            <Bounce right cascade>\n              {complete === true ?\n                <div>\n                  <div className=\"ui orange message\">\n                    <div className='header'>Message Sent</div>\n                  </div>\n                </div>\n                :\n                <div>\n\n                </div>\n              }\n              <div className='ui inverted  segment'>\n                <form className='ui form attached fluid form'>\n                  <div className='two fields'>\n                    <div className='field'>\n                      <input type='text' placeholder='name' value={name} onChange={(e) => { setName(e.target.value) }} />\n                    </div>\n                    <div className='divider' />\n                    <div className='field'>\n                      <input type='email' placeholder='email' value={email} onChange={(e) => { setEmail(e.target.value) }} />\n                    </div>\n                  </div>\n                  <div className='divider' />\n                  <div className='field'>\n                    <input type='text' placeholder='subject' value={subject} onChange={(e) => { setSubject(e.target.value) }} />\n                  </div>\n                  <div>\n                    <div className='field'>\n                      <textarea placeholder='message' rows='10' value={message} onChange={(e) => { setMessage(e.target.value) }} ></textarea>\n                    </div>\n                  </div>\n                  <br />\n                  {emailValidation(email) === true && contentValidation() === true ?\n                    <div>\n                      <button className='ui right floated orange button' onClick={click}>\n                        SEND\n                </button>\n                    </div>\n                    :\n                    <div>\n                      <button className='ui disabled right floated inverted button'>SEND</button>\n                    </div>\n                  }\n\n                </form>\n                <br />\n                <br />\n              </div>\n\n            </Bounce>\n\n\n            <div className='tags'>\n              <br />\n              <p>&lt; /input &gt;</p>\n              <br />\n            </div>\n\n            <div className='tags'>\n              <br />\n              <p>&lt; MyLocation &gt;</p>\n\n            </div>\n\n            <div class='ui inverted segment'>\n\n              <GoogleMaps\n                apiKey={process.env.REACT_APP_API_KEY}\n                style={{ height: \"400px\", width: \"100%\" }}\n                zoom={6}\n                center={{ lat: 40.728291, lng: -73.844612 }}\n                markers={{ lat: 40.728291, lng: -73.844612 }}\n              />\n            </div>\n            <div className='tags'>\n\n              <p>&lt; /MyLocation &gt;</p>\n              <br />\n            </div>\n\n\n            <div className='tags'>\n              <br />\n              <p>&lt; div &gt;</p>\n              <br />\n              <br />\n            </div>\n          </div>\n        </Fade>\n      </div>\n    </div>\n  )\n}","/Users/sohamdutta/Desktop/code/myPortfolio/src/components/Work.js",[],"/Users/sohamdutta/Desktop/code/myPortfolio/src/components/Skills.js",["49"],"/Users/sohamdutta/Desktop/code/myPortfolio/src/components/Project.js",["50","51","52","53","54"],"import React, { useState } from 'react'\nimport { Grid, Image, Divider } from 'semantic-ui-react'\n\nexport default function Project({ imageUrl, deployedLink, gitHubLink, projectName, description, tech }) {\n\n  return (\n\n\n    <div class='ui inverted segment' style={{ marginTop: '50px' }}>\n      <Grid columns={2} stackable textAlign='center'>\n        <Divider vertical></Divider>\n\n        <Grid.Row verticalAlign='middle'>\n          <Grid.Column>\n            <div class='ui fluid image'>\n              <img src={imageUrl} />\n            </div>\n          </Grid.Column>\n          <Grid.Column>\n            <h1 style={{ color: 'orange' }} class='ui header'>{projectName}</h1>\n\n            <p>{description}</p>\n            {gitHubLink ? (\n              <div>\n                <a\n                  class='ui button'\n                  href={gitHubLink}\n                  target=\"_blank\"\n                >\n                  Source Code\n            </a>\n                <br />\n              </div>\n            )\n\n              : (<div> </div>)}\n            {deployedLink ? (\n              <div>\n                <br />\n                <a\n                  class='ui orange button'\n                  href={deployedLink}\n                  target=\"_blank\"\n                >\n                  Live Site\n            </a>\n                <br />\n              </div>\n            ) : (<div> </div>)}\n            <br />\n            <p style={{ color: 'orange' }}>Technologies Used</p>\n            <p>{tech}</p>\n          </Grid.Column>\n\n\n\n\n        </Grid.Row>\n      </Grid>\n\n    </div>\n  )\n}",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":25,"column":24,"nodeType":"61","messageId":"62","endLine":25,"endColumn":25,"suggestions":"63"},{"ruleId":"59","severity":1,"message":"60","line":25,"column":49,"nodeType":"61","messageId":"62","endLine":25,"endColumn":50,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"70","line":2,"column":16,"nodeType":"67","messageId":"68","endLine":2,"endColumn":21},{"ruleId":"71","severity":1,"message":"72","line":16,"column":15,"nodeType":"73","endLine":16,"endColumn":37},{"ruleId":"74","severity":1,"message":"75","line":25,"column":17,"nodeType":"73","endLine":29,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":40,"column":17,"nodeType":"73","endLine":44,"endColumn":18},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["78","79"],["80","81"],"no-unused-vars","'Bounce' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"messageId":"82","fix":"83","desc":"84"},{"messageId":"85","fix":"86","desc":"87"},{"messageId":"82","fix":"88","desc":"84"},{"messageId":"85","fix":"89","desc":"87"},"removeEscape",{"range":"90","text":"91"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"92","text":"93"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"94","text":"91"},{"range":"95","text":"93"},[725,726],"",[725,725],"\\",[750,751],[750,750]]